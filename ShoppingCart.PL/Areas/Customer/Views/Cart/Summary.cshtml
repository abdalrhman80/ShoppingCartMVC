@model ShoppingCartViewModel
@inject IOptions<StripeOptions> Stripe

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css">

<div class="checkout-wrapper">
	<form asp-action="Checkout" method="post">
		<div class="row">
			<div class="col-lg-7 col-md-12">
				<div class="form-card">
					<h2 class="h5 mb-4">Billing Address</h2>

					<div class="form-group">
						<label for="name">Name</label>
						<input id="name" type="text" class="form-control" asp-for="OrderHeader.UserName" />
						<span asp-validation-for="OrderHeader.UserName" class="validation-message"></span>
					</div>

					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="phoneNumber">Phone Number</label>
								<input id="phoneNumber" type="text" class="form-control" asp-for="OrderHeader.PhoneNumber" />
								<span asp-validation-for="OrderHeader.PhoneNumber" class="validation-message"></span>
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label for="city">City</label>
								<input id="city" type="text" class="form-control" asp-for="OrderHeader.City" />
								<span asp-validation-for="OrderHeader.City" class="validation-message"></span>
							</div>
						</div>
					</div>

					<div class="form-group mb-0">
						<label for="address">Address</label>
						<input id="address" type="text" class="form-control" asp-for="OrderHeader.Address" />
						<span asp-validation-for="OrderHeader.Address" class="validation-message"></span>
					</div>
				</div>
			</div>

			<div class="col-lg-5 col-md-12">
				<div class="form-card">
					<div class="d-flex justify-content-between align-items-center mb-4">
						<h2 class="h5 mb-0">Cart Summary</h2>
						<a asp-action="Index" class="text-primary">Edit</a>
					</div>

					@foreach (var cartItem in Model.CartItems)
					{
						<div class="cart-item">
							<div class="cart-item-image">
								<img src="~/@cartItem.Product.Image" alt="@cartItem.Product.Name" width="90" height="80"
									 class="rounded" />
								<span class="cart-item-count">@cartItem.Count</span>
							</div>
							<div class="cart-item-details">
								<h6 class="mb-0">@cartItem.Product.Name</h6>
								<span class="font-weight-bold">@cartItem.Product.Price.ToString("c")</span>
							</div>
						</div>
					}

					<div class="cart-total">
						<span>Total</span>
						<span>@Model.OrderHeader.TotalPrice.ToString("c")</span>
					</div>

					<button type="submit" class="btn btn-primary checkout-btn" onclick="return CheckData()">
						Checkout
					</button>
				</div>
			</div>
		</div>
	</form>
</div>

<style>
	.checkout-wrapper {
		padding: 1rem;
		max-width: 1200px;
		margin: 0 auto;
	}

	.form-card {
		background: white;
		border-radius: 0.5rem;
		padding: 1.5rem;
		box-shadow: 0 2px 4px rgba(0,0,0,0.1);
		margin-bottom: 1.5rem;
	}

	.cart-item {
		display: flex;
		align-items: center;
		padding: 1rem 0;
		border-bottom: 1px solid #eee;
	}

	.cart-item-image {
		position: relative;
		margin-right: 1rem;
	}

	.cart-item-count {
		position: absolute;
		top: -8px;
		right: -8px;
		background: #007bff;
		color: white;
		border-radius: 50%;
		width: 24px;
		height: 24px;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 0.875rem;
	}

	.cart-item-details {
		flex-grow: 1;
		display: flex;
		justify-content: space-between;
		align-items: center;
		/* flex-wrap: wrap; */
	}

	.cart-total {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 1rem 0;
		font-size: 1.1rem;
		font-weight: bold;
	}

	@@media (max-width: 768px) {
		.cart-item-details {
			flex-direction: column;
			align-items: flex-start;
			gap: 0.5rem;
		}

		.form-card {
			padding: 1rem;
		}
	}

	@@media (max-width: 576px) {
		.checkout-wrapper {
			padding: 1rem;
		}
	}

	.validation-message {
		color: #dc3545;
		font-size: 0.875rem;
		margin-top: 0.25rem;
	}

	.checkout-btn {
		width: 100%;
		padding: 0.75rem;
		font-size: 1.1rem;
	}
</style>

@section Scripts {
	<script>
		function CheckData() {
			const fields = [
				{ id: 'name', label: 'Name' },
				{ id: 'phoneNumber', label: 'Phone Number' },
				{ id: 'city', label: 'City' },
				{ id: 'address', label: 'Address' }
			];

			for (const field of fields) {
				if (document.getElementById(field.id).value.trim() === '') {
					Swal.fire({
						title: 'There Is An Error',
						text: `Please Enter ${field.label}`,
						icon: 'error',
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
					});
					return false;
				}
			}
			return true;
		}
	</script>
}